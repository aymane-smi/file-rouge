import { Schema } from "./definitions";
import { FeatureDefinition, FeatureDefinitions, FeatureVersion } from "./coreSpec";
import { DirectiveSpecification, TypeSpecification } from "./directiveAndTypeSpecification";
import { GraphQLError } from "graphql";
export declare const federationIdentity = "https://specs.apollo.dev/federation";
export declare enum FederationTypeName {
    FIELD_SET = "FieldSet"
}
export declare enum FederationDirectiveName {
    KEY = "key",
    EXTERNAL = "external",
    REQUIRES = "requires",
    PROVIDES = "provides",
    EXTENDS = "extends",
    SHAREABLE = "shareable",
    OVERRIDE = "override",
    TAG = "tag",
    INACCESSIBLE = "inaccessible",
    COMPOSE_DIRECTIVE = "composeDirective",
    INTERFACE_OBJECT = "interfaceObject"
}
export declare const FEDERATION1_TYPES: TypeSpecification[];
export declare const FEDERATION1_DIRECTIVES: DirectiveSpecification[];
export declare class FederationSpecDefinition extends FeatureDefinition {
    private readonly _directiveSpecs;
    private readonly _typeSpecs;
    constructor(version: FeatureVersion);
    private registerDirective;
    private registerType;
    directiveSpecs(): readonly DirectiveSpecification[];
    typeSpecs(): readonly TypeSpecification[];
    addElementsToSchema(schema: Schema): GraphQLError[];
    allElementNames(): string[];
}
export declare const FEDERATION_VERSIONS: FeatureDefinitions<FederationSpecDefinition>;
//# sourceMappingURL=federationSpec.d.ts.map