type Restaurant @key(fields: "id") {
    id: ID!
    name: String!
    email: String!
    password: String!
    phone: String!
    address: String!
    menus: [Menu]! @hasMany
}

type Menu @key(fields: "id") {
    id: ID!
    image: String!
    available: Boolean
    restaurant: Restaurant! @belongsTo
    details: [MenuDetails]! @hasMany
}

type MenuDetails @key(fields: "id") {
    id: ID!
    menu_id: Int!
    price: Int!
    portion: Int!
}

type Order @key(fields: "id") {
    id: ID!
    employee_id: ID!
    menu_id: ID!
    current_price: Int!
    quantity: Int!
}

type Query {
    getRestaurantById(id: ID! @eq): Restaurant! @find
    getAllRestaurant: [Restaurant!] @all(model: "App\\Models\\restaurant")
    getMenu(id: ID! @eq): Menu! @find(model: "App\\Models\\menu")
    getDetailById(id: ID! @eq): MenuDetails!
        @find(model: "App\\Models\\menu_details")
    getAllOrders(id: ID! @eq): [Order]! @all(model: "App\\Models\\order")
    RestaurantLogin(email: String!, password: String!): String!
}

type Mutation {
    editRestaurant(input: EditRestaurant @spread): Restaurant!
    editMenuStatus(id: ID! @eq, status: Boolean): Menu!
    createRestaurant(input: RestaurantInput @spread): Restaurant!
        @create(model: "App\\Models\\restaurant")
    createMenu(input: MenuInput @spread): Menu!
        @create(model: "App\\Models\\menu")
    createMenuDetails(input: MenuDetailsInput @spread): MenuDetails!
        @create(model: "App\\Models\\menu_details")
    # createRestaurant(input: RestaurantInput @spread): Restaurant!
    #     @create(model: "App\\Models\\restaurant")
}

input EditRestaurant {
    id: ID! @rules(apply: ["required", "filled"])
    name: String! @rules(apply: ["required", "filled"])
    email: String! @rules(apply: ["required", "filled", "email"])
    password: String! @rules(apply: ["required", "filled"])
    phone: String! @rules(apply: ["required", "filled"])
    address: String! @rules(apply: ["required", "filled"])
}

input RestaurantInput {
    name: String! @rules(apply: ["required", "filled"])
    email: String! @rules(apply: ["required", "filled", "email"])
    password: String! @rules(apply: ["required", "filled"])
    phone: String! @rules(apply: ["required", "filled"])
    address: String! @rules(apply: ["required", "filled"])
}

input MenuInput {
    name: String!
    restaurant_id: Int!
    image: String!
    available: Boolean = true
}

input MenuDetailsInput {
    menu_id: Int!
    price: Int!
    portion: Int!
}

type _Service {
    sdl: String
}
